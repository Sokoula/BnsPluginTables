/*
 Generated Code! Do not manually edit this code. Modify the generator instead.
*/
#pragma once
#include "../DrEl.h"
#include "../BnsCustomProperties.h"

namespace Data {
#pragma pack(push, 1)
	struct questreward_Record : DrEl
	{
	public:
		union Key
		{
            struct {
                __int16 id;

            };
			unsigned __int64 key;
		};
		__declspec(align(8)) Key key;
		wchar_t* alias;
__int8 quest_first_progress;
__int8 quest_completion_count;
__int8 quest_completion_count_op;
char Pad0[1];
__int32 basic_money;
__int32 basic_exp;
__int32 basic_account_exp;
__int8 basic_mastery_level;
char Pad1[1];
__int16 basic_production_exp;
__int16 basic_faction_reputation;
__int16 basic_guild_reputation;
__int32 basic_duel_point;
__int32 basic_party_battle_point;
__int32 basic_field_play_point;
Data::TableRef fixed_skill3[4];
int fixed_skill3_tableId(){return 324;};
Data::ExplicitTableRef fixed_common_slot[4];
__int8 fixed_common_item_count[4];
__int8 fixed_common_skill_var_idx[4];
Data::ExplicitTableRef optional_common_slot[4];
__int8 optional_common_item_count[4];
Data::TableRef fixed_1_faction;
int fixed_1_faction_tableId(){return 130;};
__int8 fixed_1_job[16];
__int8 fixed_1_sex[4];
__int8 fixed_1_race[4];
__int8 fixed_1_difficulty_type;
char Pad2[3];
Data::ExplicitTableRef fixed_1_slot[4];
__int8 fixed_1_item_count[4];
__int8 fixed_1_skill_var_idx[4];
Data::TableRef fixed_2_faction;
int fixed_2_faction_tableId(){return 130;};
__int8 fixed_2_job[16];
__int8 fixed_2_sex[4];
__int8 fixed_2_race[4];
__int8 fixed_2_difficulty_type;
char Pad3[3];
Data::ExplicitTableRef fixed_2_slot[4];
__int8 fixed_2_item_count[4];
__int8 fixed_2_skill_var_idx[4];
Data::TableRef fixed_3_faction;
int fixed_3_faction_tableId(){return 130;};
__int8 fixed_3_job[16];
__int8 fixed_3_sex[4];
__int8 fixed_3_race[4];
__int8 fixed_3_difficulty_type;
char Pad4[3];
Data::ExplicitTableRef fixed_3_slot[4];
__int8 fixed_3_item_count[4];
__int8 fixed_3_skill_var_idx[4];
Data::TableRef fixed_4_faction;
int fixed_4_faction_tableId(){return 130;};
__int8 fixed_4_job[16];
__int8 fixed_4_sex[4];
__int8 fixed_4_race[4];
__int8 fixed_4_difficulty_type;
char Pad5[3];
Data::ExplicitTableRef fixed_4_slot[4];
__int8 fixed_4_item_count[4];
__int8 fixed_4_skill_var_idx[4];
Data::TableRef fixed_5_faction;
int fixed_5_faction_tableId(){return 130;};
__int8 fixed_5_job[16];
__int8 fixed_5_sex[4];
__int8 fixed_5_race[4];
__int8 fixed_5_difficulty_type;
char Pad6[3];
Data::ExplicitTableRef fixed_5_slot[4];
__int8 fixed_5_item_count[4];
__int8 fixed_5_skill_var_idx[4];
Data::TableRef fixed_6_faction;
int fixed_6_faction_tableId(){return 130;};
__int8 fixed_6_job[16];
__int8 fixed_6_sex[4];
__int8 fixed_6_race[4];
__int8 fixed_6_difficulty_type;
char Pad7[3];
Data::ExplicitTableRef fixed_6_slot[4];
__int8 fixed_6_item_count[4];
__int8 fixed_6_skill_var_idx[4];
Data::TableRef fixed_7_faction;
int fixed_7_faction_tableId(){return 130;};
__int8 fixed_7_job[16];
__int8 fixed_7_sex[4];
__int8 fixed_7_race[4];
__int8 fixed_7_difficulty_type;
char Pad8[3];
Data::ExplicitTableRef fixed_7_slot[4];
__int8 fixed_7_item_count[4];
__int8 fixed_7_skill_var_idx[4];
Data::TableRef fixed_8_faction;
int fixed_8_faction_tableId(){return 130;};
__int8 fixed_8_job[16];
__int8 fixed_8_sex[4];
__int8 fixed_8_race[4];
__int8 fixed_8_difficulty_type;
char Pad9[3];
Data::ExplicitTableRef fixed_8_slot[4];
__int8 fixed_8_item_count[4];
__int8 fixed_8_skill_var_idx[4];
Data::TableRef fixed_9_faction;
int fixed_9_faction_tableId(){return 130;};
__int8 fixed_9_job[16];
__int8 fixed_9_sex[4];
__int8 fixed_9_race[4];
__int8 fixed_9_difficulty_type;
char Pad10[3];
Data::ExplicitTableRef fixed_9_slot[4];
__int8 fixed_9_item_count[4];
__int8 fixed_9_skill_var_idx[4];
Data::TableRef fixed_10_faction;
int fixed_10_faction_tableId(){return 130;};
__int8 fixed_10_job[16];
__int8 fixed_10_sex[4];
__int8 fixed_10_race[4];
__int8 fixed_10_difficulty_type;
char Pad11[3];
Data::ExplicitTableRef fixed_10_slot[4];
__int8 fixed_10_item_count[4];
__int8 fixed_10_skill_var_idx[4];
Data::TableRef fixed_11_faction;
int fixed_11_faction_tableId(){return 130;};
__int8 fixed_11_job[16];
__int8 fixed_11_sex[4];
__int8 fixed_11_race[4];
__int8 fixed_11_difficulty_type;
char Pad12[3];
Data::ExplicitTableRef fixed_11_slot[4];
__int8 fixed_11_item_count[4];
__int8 fixed_11_skill_var_idx[4];
Data::TableRef fixed_12_faction;
int fixed_12_faction_tableId(){return 130;};
__int8 fixed_12_job[16];
__int8 fixed_12_sex[4];
__int8 fixed_12_race[4];
__int8 fixed_12_difficulty_type;
char Pad13[3];
Data::ExplicitTableRef fixed_12_slot[4];
__int8 fixed_12_item_count[4];
__int8 fixed_12_skill_var_idx[4];
Data::TableRef fixed_13_faction;
int fixed_13_faction_tableId(){return 130;};
__int8 fixed_13_job[16];
__int8 fixed_13_sex[4];
__int8 fixed_13_race[4];
__int8 fixed_13_difficulty_type;
char Pad14[3];
Data::ExplicitTableRef fixed_13_slot[4];
__int8 fixed_13_item_count[4];
__int8 fixed_13_skill_var_idx[4];
Data::TableRef fixed_14_faction;
int fixed_14_faction_tableId(){return 130;};
__int8 fixed_14_job[16];
__int8 fixed_14_sex[4];
__int8 fixed_14_race[4];
__int8 fixed_14_difficulty_type;
char Pad15[3];
Data::ExplicitTableRef fixed_14_slot[4];
__int8 fixed_14_item_count[4];
__int8 fixed_14_skill_var_idx[4];
Data::TableRef fixed_15_faction;
int fixed_15_faction_tableId(){return 130;};
__int8 fixed_15_job[16];
__int8 fixed_15_sex[4];
__int8 fixed_15_race[4];
__int8 fixed_15_difficulty_type;
char Pad16[3];
Data::ExplicitTableRef fixed_15_slot[4];
__int8 fixed_15_item_count[4];
__int8 fixed_15_skill_var_idx[4];
Data::TableRef fixed_16_faction;
int fixed_16_faction_tableId(){return 130;};
__int8 fixed_16_job[16];
__int8 fixed_16_sex[4];
__int8 fixed_16_race[4];
__int8 fixed_16_difficulty_type;
char Pad17[3];
Data::ExplicitTableRef fixed_16_slot[4];
__int8 fixed_16_item_count[4];
__int8 fixed_16_skill_var_idx[4];
Data::TableRef optional_1_faction;
int optional_1_faction_tableId(){return 130;};
__int8 optional_1_job[16];
__int8 optional_1_sex[4];
__int8 optional_1_race[4];
__int8 optional_1_difficulty_type;
char Pad18[3];
Data::ExplicitTableRef optional_1_slot[4];
__int8 optional_1_item_count[4];
Data::TableRef optional_2_faction;
int optional_2_faction_tableId(){return 130;};
__int8 optional_2_job[16];
__int8 optional_2_sex[4];
__int8 optional_2_race[4];
__int8 optional_2_difficulty_type;
char Pad19[3];
Data::ExplicitTableRef optional_2_slot[4];
__int8 optional_2_item_count[4];
Data::TableRef optional_3_faction;
int optional_3_faction_tableId(){return 130;};
__int8 optional_3_job[16];
__int8 optional_3_sex[4];
__int8 optional_3_race[4];
__int8 optional_3_difficulty_type;
char Pad20[3];
Data::ExplicitTableRef optional_3_slot[4];
__int8 optional_3_item_count[4];
Data::TableRef optional_4_faction;
int optional_4_faction_tableId(){return 130;};
__int8 optional_4_job[16];
__int8 optional_4_sex[4];
__int8 optional_4_race[4];
__int8 optional_4_difficulty_type;
char Pad21[3];
Data::ExplicitTableRef optional_4_slot[4];
__int8 optional_4_item_count[4];
Data::TableRef optional_5_faction;
int optional_5_faction_tableId(){return 130;};
__int8 optional_5_job[16];
__int8 optional_5_sex[4];
__int8 optional_5_race[4];
__int8 optional_5_difficulty_type;
char Pad22[3];
Data::ExplicitTableRef optional_5_slot[4];
__int8 optional_5_item_count[4];
Data::TableRef optional_6_faction;
int optional_6_faction_tableId(){return 130;};
__int8 optional_6_job[16];
__int8 optional_6_sex[4];
__int8 optional_6_race[4];
__int8 optional_6_difficulty_type;
char Pad23[3];
Data::ExplicitTableRef optional_6_slot[4];
__int8 optional_6_item_count[4];
Data::TableRef optional_7_faction;
int optional_7_faction_tableId(){return 130;};
__int8 optional_7_job[16];
__int8 optional_7_sex[4];
__int8 optional_7_race[4];
__int8 optional_7_difficulty_type;
char Pad24[3];
Data::ExplicitTableRef optional_7_slot[4];
__int8 optional_7_item_count[4];
Data::TableRef optional_8_faction;
int optional_8_faction_tableId(){return 130;};
__int8 optional_8_job[16];
__int8 optional_8_sex[4];
__int8 optional_8_race[4];
__int8 optional_8_difficulty_type;
char Pad25[3];
Data::ExplicitTableRef optional_8_slot[4];
__int8 optional_8_item_count[4];
Data::TableRef optional_9_faction;
int optional_9_faction_tableId(){return 130;};
__int8 optional_9_job[16];
__int8 optional_9_sex[4];
__int8 optional_9_race[4];
__int8 optional_9_difficulty_type;
char Pad26[3];
Data::ExplicitTableRef optional_9_slot[4];
__int8 optional_9_item_count[4];
Data::TableRef optional_10_faction;
int optional_10_faction_tableId(){return 130;};
__int8 optional_10_job[16];
__int8 optional_10_sex[4];
__int8 optional_10_race[4];
__int8 optional_10_difficulty_type;
char Pad27[3];
Data::ExplicitTableRef optional_10_slot[4];
__int8 optional_10_item_count[4];
Data::TableRef optional_11_faction;
int optional_11_faction_tableId(){return 130;};
__int8 optional_11_job[16];
__int8 optional_11_sex[4];
__int8 optional_11_race[4];
__int8 optional_11_difficulty_type;
char Pad28[3];
Data::ExplicitTableRef optional_11_slot[4];
__int8 optional_11_item_count[4];
Data::TableRef optional_12_faction;
int optional_12_faction_tableId(){return 130;};
__int8 optional_12_job[16];
__int8 optional_12_sex[4];
__int8 optional_12_race[4];
__int8 optional_12_difficulty_type;
char Pad29[3];
Data::ExplicitTableRef optional_12_slot[4];
__int8 optional_12_item_count[4];
Data::TableRef optional_13_faction;
int optional_13_faction_tableId(){return 130;};
__int8 optional_13_job[16];
__int8 optional_13_sex[4];
__int8 optional_13_race[4];
__int8 optional_13_difficulty_type;
char Pad30[3];
Data::ExplicitTableRef optional_13_slot[4];
__int8 optional_13_item_count[4];
Data::TableRef optional_14_faction;
int optional_14_faction_tableId(){return 130;};
__int8 optional_14_job[16];
__int8 optional_14_sex[4];
__int8 optional_14_race[4];
__int8 optional_14_difficulty_type;
char Pad31[3];
Data::ExplicitTableRef optional_14_slot[4];
__int8 optional_14_item_count[4];
Data::TableRef optional_15_faction;
int optional_15_faction_tableId(){return 130;};
__int8 optional_15_job[16];
__int8 optional_15_sex[4];
__int8 optional_15_race[4];
__int8 optional_15_difficulty_type;
char Pad32[3];
Data::ExplicitTableRef optional_15_slot[4];
__int8 optional_15_item_count[4];
Data::TableRef optional_16_faction;
int optional_16_faction_tableId(){return 130;};
__int8 optional_16_job[16];
__int8 optional_16_sex[4];
__int8 optional_16_race[4];
__int8 optional_16_difficulty_type;
char Pad33[3];
Data::ExplicitTableRef optional_16_slot[4];
__int8 optional_16_item_count[4];
Data::TableRef dayofweek_sun_fixed_item[2];
int dayofweek_sun_fixed_item_tableId(){return 189;};
__int8 dayofweek_sun_fixed_item_count[2];
char Pad34[2];
Data::TableRef dayofweek_mon_fixed_item[2];
int dayofweek_mon_fixed_item_tableId(){return 189;};
__int8 dayofweek_mon_fixed_item_count[2];
char Pad35[2];
Data::TableRef dayofweek_tue_fixed_item[2];
int dayofweek_tue_fixed_item_tableId(){return 189;};
__int8 dayofweek_tue_fixed_item_count[2];
char Pad36[2];
Data::TableRef dayofweek_wed_fixed_item[2];
int dayofweek_wed_fixed_item_tableId(){return 189;};
__int8 dayofweek_wed_fixed_item_count[2];
char Pad37[2];
Data::TableRef dayofweek_thu_fixed_item[2];
int dayofweek_thu_fixed_item_tableId(){return 189;};
__int8 dayofweek_thu_fixed_item_count[2];
char Pad38[2];
Data::TableRef dayofweek_fri_fixed_item[2];
int dayofweek_fri_fixed_item_tableId(){return 189;};
__int8 dayofweek_fri_fixed_item_count[2];
char Pad39[2];
Data::TableRef dayofweek_sat_fixed_item[2];
int dayofweek_sat_fixed_item_tableId(){return 189;};
__int8 dayofweek_sat_fixed_item_count[2];
char Pad40[2];
__int32 dayofweek_sun_bonus_money;
__int32 dayofweek_mon_bonus_money;
__int32 dayofweek_tue_bonus_money;
__int32 dayofweek_wed_bonus_money;
__int32 dayofweek_thu_bonus_money;
__int32 dayofweek_fri_bonus_money;
__int32 dayofweek_sat_bonus_money;
Data::TableRef newbie_party_fixed_item[2];
int newbie_party_fixed_item_tableId(){return 189;};
__int8 newbie_party_fixed_item_count[2];
char Pad41[2];
Data::TableRef oldbie_party_fixed_item[2];
int oldbie_party_fixed_item_tableId(){return 189;};
__int8 oldbie_party_fixed_item_count[2];
char Pad42[2];
Data::TableRef mentor_fixed_item[2];
int mentor_fixed_item_tableId(){return 189;};
__int8 mentor_fixed_item_count[2];
char Pad43[2];
Data::TableRef hongmoon_item[2];
int hongmoon_item_tableId(){return 189;};
__int16 hongmoon_item_count[2];
Data::TableRef membership_item[2];
int membership_item_tableId(){return 189;};
__int16 membership_item_count[2];
Data::TableRef pccafe_item[2];
int pccafe_item_tableId(){return 189;};
__int16 pccafe_item_count[2];
Data::TableRef dungeon_additional_reward_item[4];
int dungeon_additional_reward_item_tableId(){return 189;};
__int8 dungeon_additional_reward_item_count[4];
Data::TableRef dungeon_additional_reward_cost_a[4];
int dungeon_additional_reward_cost_a_tableId(){return 76;};
Data::TableRef dungeon_additional_reward_cost_b[4];
int dungeon_additional_reward_cost_b_tableId(){return 76;};
Data::TableRef sealed_dungeon_reward;
int sealed_dungeon_reward_tableId(){return 286;};
__int32 sealed_dungeon_reward_data_id;

		static TableVersion Version() { return TableVersion(5, 0); }
		static __int16 TableId() { return 284; }
		static __int32 SubType() { return 0; }
	};
#pragma pack(pop)
#pragma pack(push, 1)
	struct __declspec(align(4)) questreward_RecordPtr // : DrRecordPtr
	{
		questreward_Record* _record;
		int _cacheChunkIndex;
		//__unaligned __declspec(align(1)) const Data::questreward_Record* _debug;
		bool _makeCopy;
	};
#pragma pack(pop)
}